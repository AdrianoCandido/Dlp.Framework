<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>IocFactory.Resolve(TInterface) Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Resolve%3CTInterface%3E method" /><meta name="System.Keywords" content="Resolve(Of TInterface) method" /><meta name="System.Keywords" content="IocFactory.Resolve%3CTInterface%3E method" /><meta name="System.Keywords" content="IocFactory.Resolve(Of TInterface) method" /><meta name="Microsoft.Help.F1" content="Dlp.Framework.Container.IocFactory.Resolve``1" /><meta name="Microsoft.Help.Id" content="M:Dlp.Framework.Container.IocFactory.Resolve``1(System.Object[])" /><meta name="Description" content="Gets the class registered with the provided interface. If multiple types are associated with the interface, the first registered type is returned." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Dlp.Framework.Container" /><meta name="file" content="629dcbad-f186-ebc3-ed6c-79ec29d003d7" /><meta name="guid" content="629dcbad-f186-ebc3-ed6c-79ec29d003d7" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">DLP SDK<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="f8ec05c7-0c7d-4e55-bdf3-2a8eeace09c3.htm" title="DLP SDK" tocid="roottoc">DLP SDK</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="a01bff2f-78de-5e49-7e92-8ef58c74b5d4.htm" title="Dlp.Framework.Container" tocid="a01bff2f-78de-5e49-7e92-8ef58c74b5d4">Dlp.Framework.Container</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="ca7446fd-bd44-0f4a-ee89-1f8a1fb2a9ce.htm" title="IocFactory Class" tocid="ca7446fd-bd44-0f4a-ee89-1f8a1fb2a9ce">IocFactory Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="9842f787-1575-66af-2c8f-10cc56de6a55.htm" title="IocFactory Methods" tocid="9842f787-1575-66af-2c8f-10cc56de6a55">IocFactory Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="f3a7936b-b571-f04b-f397-9070183e1fbb.htm" title="Register Method " tocid="f3a7936b-b571-f04b-f397-9070183e1fbb">Register Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="cc30fea4-8247-9a96-1fdb-50fd5e6c525e.htm" title="Reset Method " tocid="cc30fea4-8247-9a96-1fdb-50fd5e6c525e">Reset Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="629dcbad-f186-ebc3-ed6c-79ec29d003d7.htm" title="Resolve(TInterface) Method " tocid="629dcbad-f186-ebc3-ed6c-79ec29d003d7">Resolve(TInterface) Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="3ab2b200-68c0-af10-4d8a-b720af24370d.htm" title="ResolveByName(TInterface) Method " tocid="3ab2b200-68c0-af10-4d8a-b720af24370d">ResolveByName(TInterface) Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize"><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize"></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Help.png" /></td><td class="titleColumn">IocFactory<span id="LST3F8212A2_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3F8212A2_0?cpp=::|nu=.");</script>Resolve<span id="LST3F8212A2_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3F8212A2_1?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="typeparameter">TInterface</span><span id="LST3F8212A2_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3F8212A2_2?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script> Method </td></tr></table><span class="introStyle"></span><div class="summary">
            Gets the class registered with the provided interface. If multiple types are associated with the interface, the first registered type is returned.
            </div><p> </p><strong>Namespace:</strong> <a href="a01bff2f-78de-5e49-7e92-8ef58c74b5d4.htm">Dlp.Framework.Container</a><br /><strong>Assembly:</strong> Dlp.Framework (in Dlp.Framework.dll) Version: 0.1.5732.25257 (1.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0ECCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','cs','1','3');return false;">C#</a></div><div id="ID0ECCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','vb','2','3');return false;">VB</a></div><div id="ID0ECCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','cpp','3','3');return false;">C++</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0ECCA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0ECCA');return false;" title="Copy">Copy</a></div></div><div id="ID0ECCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> TInterface <span class="identifier">Resolve</span>&lt;TInterface&gt;(
	<span class="keyword">params</span> <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>[] <span class="parameter">constructorParameters</span>
)
<span class="keyword">where</span> TInterface : <span class="keyword">class</span>
</pre></div><div id="ID0ECCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">Resolve</span>(<span class="keyword">Of</span> TInterface <span class="keyword">As</span> <span class="keyword">Class</span>) ( 
	<span class="keyword">ParamArray</span> <span class="parameter">constructorParameters</span> <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>()
) <span class="keyword">As</span> TInterface</pre></div><div id="ID0ECCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">generic</span>&lt;<span class="keyword">typename</span> TInterface&gt;
<span class="keyword">where</span> TInterface : <span class="keyword">ref class</span>
<span class="keyword">static</span> TInterface <span class="identifier">Resolve</span>(
	... <span class="keyword">array</span>&lt;<a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>^&gt;^ <span class="parameter">constructorParameters</span>
)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0ECCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">constructorParameters</span></dt><dd>Type: <span id="LST3F8212A2_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3F8212A2_3?cpp=array&lt;");</script><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="LST3F8212A2_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3F8212A2_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><span id="LST3F8212A2_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3F8212A2_5?cpp=&gt;|vb=()|nu=[]");</script><br />If the concrete class needs any parameter to be instantiated, specify them here.</dd></dl><h4 class="subHeading">Type Parameters</h4><dl><dt><span class="parameter">TInterface</span></dt><dd>Interface type.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <span class="selflink"><span class="typeparameter">TInterface</span></span><br />Returns an instance for the specified interface type.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="tableSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><a href="http://msdn2.microsoft.com/en-us/library/2asft85a" target="_blank">InvalidOperationException</a></td><td>Either the specified interface is not registered or there aren't any concrete types associated with the interface.</td></tr></table></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID4RBSection" class="collapsibleSection"><p>
        The following example shows how to create an instance for a registered interface, using the IocFactory.Resolve method.
      </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABCBA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EABCBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EABCBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Creates a new instance of the ConfigurationUtility type that implements the IConfigurationUtility interface.</span>
IConfigurationUtility configurationUtility = IocFactory.Resolve&lt;IConfigurationUtility&gt;();</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABCBA");</script><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID3RBSection" class="collapsibleSection">
        The IocFactory.Resolve method always creates a new instance of the requested type. If you want to keep the same instance for every call, you must register the type as a singleton.
        Check the IocFactory.Register method to learn how to register types as singletons.
      </div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID5RBSection" class="collapsibleSection"><p>
        Sometimes the type to be instantiated needs some parameters in its constructor. The IocFactory.Resolve method allows you to pass parameters to the constructor of the type to be instantiated.
        The next example shows how to instantiate a repository that requires the connection string to be set in the constructor.
      </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABBA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Gets the utility to access the web.config file.</span>
IConfigurationUtility configurationUtility = IocFactory.Resolve&lt;IConfigurationUtility&gt;();

<span class="highlight-comment">// Retrieves the connection string.</span>
<span class="highlight-keyword">string</span> connectionString = configurationUtility.ConnectionString;

<span class="highlight-comment">// Instantiate the MerchantRepository setting the connectionString variable as a parameter for the constructor's type.</span>
IMerchantRepository merchantRepository = IocFactory.Resolve&lt;IMerchantRepository&gt;(connectionString);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABBA");</script></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID7RBSection" class="collapsibleSection"><p>
        Another common situation occurs when a type needs another type as a constructor parameter. If both types are registered within the IocFactory container, this relationship is resolved automatically.
        The following example illustrates this scenario.
      </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAHABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAHABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAHABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Interface providing access to elements of the web.config.</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">interface</span> IConfigurationUtility {

  <span class="highlight-comment">// Gets the connection string for the application.</span>
  <span class="highlight-keyword">string</span> ConnectionString { <span class="highlight-keyword">get</span>; }

  <span class="highlight-comment">// Gets the database connection timeout.</span>
  <span class="highlight-keyword">int</span> ConnectionTimeoutInSeconds { <span class="highlight-keyword">get</span>; }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAHABA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAGABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAGABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAGABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Type that implements the IConfigurationUtilityInterface.</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">sealed</span> <span class="highlight-keyword">class</span> ConfigurationUtility : IConfigurationUtility {

  <span class="highlight-comment">// Default constructor.</span>
  <span class="highlight-keyword">public</span> ConfigurationUtility() { }

  <span class="highlight-comment">// Implementation of the property provided by the interface. Retrieves the connection string from the web.config.</span>
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">string</span> ConnectionString {
    <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> ConfigurationManager.ConnectionStrings[<span class="highlight-literal">"DatabaseConnection"</span>].ConnectionString; }
  }

  <span class="highlight-comment">// Implementation of the property provided by the interface. Retrieves the connection timeout from the web.config.</span>
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">int</span> ConnectionTimeoutInSeconds {
    <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> Convert.ToInt32(ConfigurationManager.AppSettings[<span class="highlight-literal">"ConnectionTimeout"</span>]); }
  }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAGABA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAFABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAFABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAFABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Abstract class to be inherited by all the repositories.</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">abstract</span> <span class="highlight-keyword">class</span> AbstractRepository {

  <span class="highlight-comment">// Constructor to be inherited by all the repositories.</span>
  <span class="highlight-keyword">protected</span> AbstractRepository(IConfigurationUtility configurationUtility) {

    <span class="highlight-keyword">this</span>.ConfigurationUtility = configurationUtility;
  }

  <span class="highlight-comment">// Stores the ConfigurationUtility instance.</span>
  <span class="highlight-keyword">private</span> IConfigurationUtility ConfigurationUtility { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }

  <span class="highlight-comment">// Exposes the connection string for the children classes.</span>
  <span class="highlight-keyword">protected</span> <span class="highlight-keyword">string</span> ConnectionString {
    <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> <span class="highlight-keyword">this</span>.ConfigurationUtility.ConnectionString; }
  }

  <span class="highlight-comment">// Exposes the connection timeout for the children classes.</span>
  <span class="highlight-keyword">protected</span> <span class="highlight-keyword">int</span> ConnectionTimeoutInSeconds {
    <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> <span class="highlight-keyword">this</span>.ConfigurationUtility.ConnectionTimeoutInSeconds; }
  }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAFABA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAEABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAEABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAEABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Interface to be implemented by the MerchantRepository.</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">interface</span> IMerchantRepository {

  <span class="highlight-comment">// Gets the merchant name, given the merchantId.</span>
  <span class="highlight-keyword">string</span> GetMerchantName(<span class="highlight-keyword">int</span> merchantId);
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAEABA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EADABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EADABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EADABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Class that implements the IMerchantRepository interface.</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">sealed</span> <span class="highlight-keyword">class</span> MerchantRepository : AbstractRepository, IMerchantRepository {

  <span class="highlight-comment">// Constructor that receives an instance of IConfigurationUtility.</span>
  <span class="highlight-keyword">public</span> MerchantRepository(IConfigurationUtility configurationUtility) : <span class="highlight-keyword">base</span>(configurationUtility) { }

  <span class="highlight-comment">// Implementation of the GetMerchantName method.</span>
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">string</span> GetMerchantName(<span class="highlight-keyword">int</span> merchantId) {

    <span class="highlight-comment">// Query to be used for searching the merchant.</span>
    <span class="highlight-keyword">string</span> queryString = <span class="highlight-literal">"SELECT MerchantName FROM Merchant WHERE MerchantId = @MerchantId"</span>;

    <span class="highlight-keyword">using</span>(DatabaseConnector databaseConnector = <span class="highlight-keyword">new</span> DatabaseConnector(<span class="highlight-keyword">this</span>.ConnectionString, <span class="highlight-keyword">this</span>.ConnectionTimeoutInSeconds)) {

      <span class="highlight-keyword">return</span> databaseConnector.ExecuteScalar&lt;<span class="highlight-keyword">string</span>&gt;(queryString, <span class="highlight-keyword">new</span> { MerchantId = merchantId });
    }
  }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EADABA");</script><p>
        The above structure is a common pattern when working with repositories.
        Pay attention to the MerchantRepository class and note that it does not have a default constructor. It contains only a constructor that receives the IConfigurationUtility interface.
        The following example shows how to register and retrieves that repository.
      </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EABABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EABABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> main() {

  <span class="highlight-comment">// Register the IConfigurationUtility interface and its implementation as a singleton.</span>
  IocFactory.Register(
    Component.For&lt;IConfigurationUtility&gt;()
      ImplementedBy&lt;ConfigurationUtility&gt;().AsSingleton()
  );

  <span class="highlight-comment">// Register the IMerchantRepository interface and its implementation.</span>
  IocFactory.Register(
    Component.For&lt;IMerchantRepository&gt;()
      ImplementedBy&lt;MerchantRepository&gt;()
  );

  <span class="highlight-comment">// Here we resolve the IMerchantRepository so we can use its methods.</span>
  <span class="highlight-comment">// Note that we do not need to inform the parameters for the MerchantRepository constructor, because the parameter is a registered interface (IConfigurationUtility).</span>
  <span class="highlight-comment">// The container automatically checks and search for an appropriated constructor.</span>
  IMerchantRepository merchantRepository = IocFactory.Resolve&lt;IMerchantConfiguration&gt;();

  <span class="highlight-comment">// Gets the name for the merchantId 1.</span>
  <span class="highlight-keyword">string</span> merchantName = merchantRepository.GetMerchantName(<span class="highlight-number">1</span>);
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABABA");</script><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID6RBSection" class="collapsibleSection">
        Keep in mind that for this pattern to work, your class shall not contains the default constructor. If you class contains a default constructor, it is going to have preference when resolving the interface.
        If that is the case, you have to explicitly pass the instanced type as a constructor parameter for the IocFactory.Resolve method.
      </div></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID8RB')" onkeypress="SectionExpandCollapse_CheckKey('ID8RB', event)" tabindex="0"><img id="ID8RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID8RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="ca7446fd-bd44-0f4a-ee89-1f8a1fb2a9ce.htm">IocFactory Class</a></div><div class="seeAlsoStyle"><a href="a01bff2f-78de-5e49-7e92-8ef58c74b5d4.htm">Dlp.Framework.Container Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p>© DLP 2015</p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:ejonssen%40stone.com.br?Subject=DLP SDK">ejonssen@stone.com.br</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>